apiVersion: apps/v1
kind: List
items:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: shopping-list-deployment
      annotations:
        version: 0.0.1-SNAPSHOT
    spec:
      selector:
        matchLabels:
          name: shopping-list
      replicas: 1
      template:
        metadata:
          labels:
            app: shopping-list
            name: shopping-list
            component: shopping-list
        spec:
          containers:
            - name: shopping-list
              image: shopping-list:0.0.1-SNAPSHOT
              ports:
                - containerPort: 8080
                - containerPort: 8443
              lifecycle:
                preStop:
                  exec:
                    # SIGTERM triggers a quick exit; gracefully terminate instead
                    command: ["kill", "-SIGINT", "`pidof java`"]
              # Readiness and Liveness probes, use the appropriate Spring Boot actuator endpoint
              readinessProbe:
                httpGet:
                  path: /actuator/health
                  port: 8080
                initialDelaySeconds: 10
              livenessProbe:
                httpGet:
                  path: /actuator/health
                  port: 8080
                initialDelaySeconds: 15
              # Add sensible resource requests and limits
              resources:
                requests:
                  memory: "512M"
                  cpu: "1000m"
                limits:
                  memory: "1G"
                  cpu: "2000m"
              # Use environment variables to enable our "hsqldb" Spring profile (hint: SPRING_PROFILES_ACTIVE)
              env:
                - name: SPRING_PROFILES_ACTIVE
                  value: "hsqldb"
  # In the same yml, provide an appropriate Service definition of type LoadBalancer that will map port 80 requests to port 8080 and port 443 to 8443.
  # In the same yml, provide an appropriate Route definition that will route to the Service above and enables tls passthrough termination.
  - kind: Service
    apiVersion: v1
    metadata:
      name: shopping-list-service-unsecure
    spec:
      selector:
        app: shopping-list
      ports:
        - protocol: TCP
          port: 80
          targetPort: 8080
          name: http
      type: LoadBalancer
  - kind: Route
    apiVersion: v1
    metadata:
      name: shopping-list-route-unsecure
    spec:
      to:
        kind: Service
        name: shopping-list-service-unsecure
  - kind: Service
    apiVersion: v1
    metadata:
      name: shopping-list-service-secure
    spec:
      selector:
        app: shopping-list
      ports:
        - protocol: TCP
          port: 443
          targetPort: 8443
          name: https
      type: LoadBalancer
  - kind: Route
    apiVersion: v1
    metadata:
      name: shopping-list-route-secure
    spec:
      to:
        kind: Service
        name: shopping-list-service-secure
      tls:
        termination: passthrough